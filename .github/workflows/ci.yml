name: CI
on:
  push:

jobs:
  style:
    name: Run linters and formatters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            accept-flake-config = true
      - name: Use Cachix store
        uses: cachix/cachix-action@v12
        with:
          name: blackbeard
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: blackbeard,nix-community
      - run: nix develop --impure --command just install
      - run: nix develop --impure --command just format --fail-on-change --no-cache
      - run: nix develop --impure --command just lint

  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            accept-flake-config = true
      - name: Use Cachix store
        uses: cachix/cachix-action@v12
        with:
          name: blackbeard
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: blackbeard,nix-community
      - run: nix develop --impure --command just install
      - run: nix develop --impure --command just setup
      - run: nix develop --impure --command just test

  dialyzer:
    name: Run dialyzer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            accept-flake-config = true
      - name: Use Cachix store
        uses: cachix/cachix-action@v12
        with:
          name: blackbeard
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: blackbeard,nix-community
      - run: nix develop --impure --command just install
      - id: plt-cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          path: priv/plts
      - if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          nix develop --impure --command mix dialyzer --plt
      - run: nix develop --impure --command mix dialyzer --format github
